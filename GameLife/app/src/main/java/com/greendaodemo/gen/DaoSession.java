package com.greendaodemo.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ftd.txf.com.gamelife.entity.Chengjiu;
import ftd.txf.com.gamelife.entity.Person;
import ftd.txf.com.gamelife.entity.PersonValue;
import ftd.txf.com.gamelife.entity.Record;
import ftd.txf.com.gamelife.entity.RecordOne;
import ftd.txf.com.gamelife.entity.Work;

import com.greendaodemo.gen.ChengjiuDao;
import com.greendaodemo.gen.PersonDao;
import com.greendaodemo.gen.PersonValueDao;
import com.greendaodemo.gen.RecordDao;
import com.greendaodemo.gen.RecordOneDao;
import com.greendaodemo.gen.WorkDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig chengjiuDaoConfig;
    private final DaoConfig personDaoConfig;
    private final DaoConfig personValueDaoConfig;
    private final DaoConfig recordDaoConfig;
    private final DaoConfig recordOneDaoConfig;
    private final DaoConfig workDaoConfig;

    private final ChengjiuDao chengjiuDao;
    private final PersonDao personDao;
    private final PersonValueDao personValueDao;
    private final RecordDao recordDao;
    private final RecordOneDao recordOneDao;
    private final WorkDao workDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        chengjiuDaoConfig = daoConfigMap.get(ChengjiuDao.class).clone();
        chengjiuDaoConfig.initIdentityScope(type);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        personValueDaoConfig = daoConfigMap.get(PersonValueDao.class).clone();
        personValueDaoConfig.initIdentityScope(type);

        recordDaoConfig = daoConfigMap.get(RecordDao.class).clone();
        recordDaoConfig.initIdentityScope(type);

        recordOneDaoConfig = daoConfigMap.get(RecordOneDao.class).clone();
        recordOneDaoConfig.initIdentityScope(type);

        workDaoConfig = daoConfigMap.get(WorkDao.class).clone();
        workDaoConfig.initIdentityScope(type);

        chengjiuDao = new ChengjiuDao(chengjiuDaoConfig, this);
        personDao = new PersonDao(personDaoConfig, this);
        personValueDao = new PersonValueDao(personValueDaoConfig, this);
        recordDao = new RecordDao(recordDaoConfig, this);
        recordOneDao = new RecordOneDao(recordOneDaoConfig, this);
        workDao = new WorkDao(workDaoConfig, this);

        registerDao(Chengjiu.class, chengjiuDao);
        registerDao(Person.class, personDao);
        registerDao(PersonValue.class, personValueDao);
        registerDao(Record.class, recordDao);
        registerDao(RecordOne.class, recordOneDao);
        registerDao(Work.class, workDao);
    }
    
    public void clear() {
        chengjiuDaoConfig.clearIdentityScope();
        personDaoConfig.clearIdentityScope();
        personValueDaoConfig.clearIdentityScope();
        recordDaoConfig.clearIdentityScope();
        recordOneDaoConfig.clearIdentityScope();
        workDaoConfig.clearIdentityScope();
    }

    public ChengjiuDao getChengjiuDao() {
        return chengjiuDao;
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public PersonValueDao getPersonValueDao() {
        return personValueDao;
    }

    public RecordDao getRecordDao() {
        return recordDao;
    }

    public RecordOneDao getRecordOneDao() {
        return recordOneDao;
    }

    public WorkDao getWorkDao() {
        return workDao;
    }

}
